fd_set fds;
while(1)
	{
	FD_ZERO(&fds);
	FD_SET(cennection, &fds);
	tv.tv_secs yadayada

	int ret = select(max(i.e 1)+1, &fds, 0,0, &tv);
	if isset or ret >0
		read and output what they want
	else
		output default
	


	int ret = fork();
	ret = -1; no fork happened, error
	ret = 0; you are the child
	ret = positive number; you are the parent, ret is the PID of the child you created
	if(ret ==  0)
		{
		sldkfj  //have the child deal with the conneciton
		sdlfkj  //you might want to do the timeout stuff and select stuff in here
		sdlkfj
		
		
		//redirecting out of a file
		//to send output of fortune to the client
		int fd=open("/tmp/love-list", O_WRONLY | O_CREAT | O_TRUNC);
		if(fd == -1)
			{
			perror("open was bad");
			}
		int ret=dup2(fd, 1); //sends everything that would go to 1 to fd (1 is screen) 
		if ret=-1 ERROR
		else ret=number of new file descriptor
		//execl - have to put in full path
		//execlp - this is what we want 
		execlp("ls", "ls", "-l", "/tmp", 0);
		execlp("fortune", "-o", 0);   //this is a sort of fork, replacing yourself with fortune, pid stays, fd's stay
		cout << It didn't work //no more code should work		
		
		exit(); // you dont need exit because fortune has its own
		}
}
